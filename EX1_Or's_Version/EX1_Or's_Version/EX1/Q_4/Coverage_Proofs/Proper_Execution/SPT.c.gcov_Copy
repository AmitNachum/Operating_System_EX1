        -:    0:Source:SPT.c
        -:    1:#include "SPT.h"
        -:    2:
        2:    3:int minDistance(int dist[],bool sptSet[]){
        2:    4:    int min = INT_MAX;
        2:    5:    int minIndex = 0;
        -:    6:
        8:    7:    for (int i = 0; i < V; i++)
        -:    8:    {
        6:    9:        if (!sptSet[i] && dist[i] <= minIndex) 
        -:   10:        {
        1:   11:            min = dist[i];
        1:   12:            minIndex = i;
        -:   13:        }
        -:   14:
        -:   15:    }
        2:   16:    return minIndex;
        -:   17:    
        -:   18:}
        -:   19:
        1:   20:void printSolution(int dist[])
        -:   21:{
        1:   22:    printf("\nVertex \t\t Distance from Source\n");
        4:   23:    for (int i = 0; i < V; i++)
        3:   24:        printf("%d \t\t\t %d\n", i, dist[i]);
        1:   25:}
        -:   26:
        -:   27:
        1:   28:void dijkstra(int graph[V][V],int src,int *status){
        -:   29:
        -:   30:    int dist[V];
        -:   31:    bool sptSet[V];
        -:   32:
        4:   33:    for (int i = 0; i < V ; i++)
        -:   34:    {
        3:   35:        dist[i] = INT_MAX;
        3:   36:        sptSet[i] = false;
        -:   37:
        -:   38:    }
        -:   39:
        1:   40:    dist[src] = 0;
        -:   41:
        -:   42:
        -:   43:
        3:   44:    for (int i = 0; i < V - 1; i++)
        -:   45:    {
        -:   46:        
        2:   47:        int u = minDistance(dist,sptSet);
        2:   48:        sptSet[u] = true;
        -:   49:
        8:   50:        for (int v = 0; v < V; v++)
        -:   51:        {
        6:   52:            if (graph[u][v] < 0)
        -:   53:            {
    #####:   54:                return;
        -:   55:            }
       6*:   56:            if (graph[u][v] == INT_MAX)
        -:   57:            {
    #####:   58:                continue;
        -:   59:            }
        -:   60:            
        -:   61:            
        6:   62:            if (!sptSet[v] && graph[u][v] && dist[u] != INT_MAX && dist[u] + graph[u][v] < dist[v])
        -:   63:            {
        2:   64:                dist[v] = dist[u] + graph[u][v];
        -:   65:          
        -:   66:
        -:   67:            }
        -:   68:            
        -:   69:        }
        -:   70:    }
        1:   71:    *status = 1;
        1:   72:    printSolution(dist);
        -:   73:    
        -:   74:}
